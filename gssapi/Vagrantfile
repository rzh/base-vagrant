# -*- mode: ruby -*-
# vi: set ft=ruby :

# Kerberos KDC
$KDC_SCRIPT = <<EOF
touch /var/log/vagrant-setup.log; \
source /vagrant/config/kerberos/config.sh | tee -a /var/log/vagrant-setup.log;\
bash /vagrant/config/kerberos/install_kdc.sh         | tee -a /var/log/vagrant-setup.log;
EOF

# Mongod
$MONGOD_SCRIPT = <<EOF
touch /var/log/vagrant-setup.log; \
source /vagrant/config/kerberos/config.sh | tee -a /var/log/vagrant-setup.log;\
bash /vagrant/config/kerberos/install_mongod.sh  | tee -a /var/log/vagrant-setup.log;
EOF

# Test Client
$CLIENT_SCRIPT = <<EOF
touch /var/log/vagrant-setup.log; \
source /vagrant/config/kerberos/config.sh | tee -a /var/log/vagrant-setup.log;\
bash /vagrant/config/kerberos/install_client.sh  | tee -a /var/log/vagrant-setup.log;
EOF


Vagrant.configure("2") do |config|
  config.vm.define :kdc do |mongod|
    mongod.vm.box = "CentoOS 6.4"
    mongod.vm.box_url = "http://puppet-vagrant-boxes.puppetlabs.com/centos-64-x64-vbox4210-nocm.box"

    mongod.vm.provider "virtualbox" do |v|
       # v.customize ["modifyvm", :id, "--cpus", "1"]
    end

    mongod.vm.network :private_network, ip: "192.168.19.100"
    mongod.vm.hostname = "kdc.mongotest.com"
    mongod.vm.provision :shell, :inline => $KDC_SCRIPT
  end

  config.vm.define :rhel64 do |mongod|
    mongod.vm.box = "CentoOS 6.4"
    mongod.vm.box_url = "http://puppet-vagrant-boxes.puppetlabs.com/centos-64-x64-vbox4210-nocm.box"

    mongod.vm.provider "virtualbox" do |v|
       v.customize ["modifyvm", :id, "--cpus", "2"]
    end

    mongod.vm.network :private_network, ip: "192.168.19.101"
    mongod.vm.hostname = "rhel64.mongotest.com"
    mongod.vm.provision :shell, :inline => $MONGOD_SCRIPT
  end  

  config.vm.define :rhel59 do |mongod|
    mongod.vm.box = "CentoOS 5.9"
    mongod.vm.box_url = "http://puppet-vagrant-boxes.puppetlabs.com/centos-59-x64-vbox4210-nocm.box"

    mongod.vm.provider "virtualbox" do |v|
       v.customize ["modifyvm", :id, "--cpus", "2"]
    end

    mongod.vm.network :private_network, ip: "192.168.19.102"
    mongod.vm.hostname = "rhel59.mongotest.com"
    mongod.vm.provision :shell, :inline => $MONGOD_SCRIPT
  end  

  config.vm.define :ubuntu1204 do |mongod|
    # pick my own version here
    mongod.vm.box = "Ubunto 12.04"
    mongod.vm.box_url = "http://cloud-images.ubuntu.com/vagrant/precise/current/precise-server-cloudimg-amd64-vagrant-disk1.box"

    mongod.vm.provider "virtualbox" do |v|
       # v.customize ["modifyvm", :id, "--cpus", "2"]
    end

    mongod.vm.network :private_network, ip: "192.168.19.103"
    mongod.vm.hostname = "ubuntu1204.mongotest.com"
    mongod.vm.provision :shell, :inline => $MONGOD_SCRIPT
  end

  config.vm.define :suse11sp1 do |mongod|
    # pick my own version here
    mongod.vm.box = "Suse ES 11sp1"
    mongod.vm.box_url = "http://puppet-vagrant-boxes.puppetlabs.com/sles-11sp1-x64-vbox4210-nocm.box"

    mongod.vm.provider "virtualbox" do |v|
       # v.customize ["modifyvm", :id, "--cpus", "2"]
    end

    mongod.vm.network :private_network, ip: "192.168.19.104"
    mongod.vm.hostname = "suse11sp1.mongotest.com"
    mongod.vm.provision :shell, :inline => $MONGOD_SCRIPT
  end

  config.vm.define :suse1201 do |mongod|
    # pick my own version here
    mongod.vm.box = "Suse 12.1"
    mongod.vm.box_url = "https://s3.amazonaws.com/circlejtp/OpenSuseVagrant/OpenSuse12_1x64_July14.box"

    mongod.vm.provider "virtualbox" do |v|
       # v.customize ["modifyvm", :id, "--cpus", "2"]
    end

    mongod.vm.network :private_network, ip: "192.168.19.105"
    mongod.vm.hostname = "suse1201.mongotest.com"
    mongod.vm.provision :shell, :inline => $MONGOD_SCRIPT
  end


  config.vm.define :client do |mongod|
    mongod.vm.box = "CentoOS 6.4"
    mongod.vm.box_url = "http://puppet-vagrant-boxes.puppetlabs.com/centos-64-x64-vbox4210-nocm.box"

    mongod.vm.provider "virtualbox" do |v|
       # v.customize ["modifyvm", :id, "--cpus", "2"]
    end

    mongod.vm.network :private_network, ip: "192.168.19.150"
    mongod.vm.hostname = "client.mongotest.com"
    mongod.vm.provision :shell, :inline => $CLIENT_SCRIPT
  end  

end
